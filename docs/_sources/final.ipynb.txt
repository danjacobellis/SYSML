{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "267e4f8c-85dd-4f36-9ee4-0462952afe5d",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "# Exploiting Data Compression for Efficient Learning \n",
    "[Slides](https://danjacobellis.github.io/SYSML/final.slides.html)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0e072a5-d669-4465-9a53-03cf7f807acd",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<script>\n",
    "    document.querySelector('head').innerHTML += '<style>.slides { zoom: 1.75 !important; }</style>';\n",
    "</script>\n",
    "\n",
    "<center> <h1>\n",
    "Exploiting Data Compression for Efficient Learning\n",
    "</h1> </center>\n",
    "\n",
    "&nbsp;\n",
    "\n",
    "<center> <h2>\n",
    "Dan Jacobellis\n",
    "</h2> </center>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7e1f01c-a584-4cc2-bb25-e40c78f2da1c",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Why is training so expensive?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ddbc3a4-6118-4caa-9b91-624f33b79c38",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "Training data are typically stored using lossy formats (MPEG, JPEG, HEVC, etc).\n",
    "\n",
    "Input pipelines often require multiple CPU cores as well as one or more coprocessors (GPU, TPU, etc).\n",
    "\n",
    "Moving the data around is often a bottleneck."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "add5f26c-bacd-46bd-b851-68d5bd463cdc",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/CNN_pipeline.svg\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47a00724-fe85-4d1a-ac7d-6e1b755bdc6d",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/CNN_pipeline.svg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b557814-ac67-49db-97b6-b437a586b447",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Pretraining for memory efficiency"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd3fb713-6f91-47fc-b038-bdd134cf4e91",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "Every new technique to improve efficiency is met with new demands to make models and improve accuracy."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3c0cc41-957f-4e35-8c74-27de9532024d",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/EfficientNet.png\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4dc874b4-19d9-4a44-a140-2d823651f40f",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/EfficientNet.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3ddff3f-b519-4557-9d83-e983cf9c700a",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Methods to increase CNN efficiency\n",
    "\n",
    "How do we increase the efficiency of large neural networks?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7acf1d75-1112-41a7-82b4-e87bcd8da52f",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* **Quantize** the signal, weights, or activations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bd2e889-5fbf-4d71-b22c-b969e5713222",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* Exploit the **sparsity** of the inputs and of the network"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19735447-ea35-4868-bef2-dfb9b7730843",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* **Downsample**, crop, or resize the inputs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12155650-eafd-4b83-a160-b4efbb352a70",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* These are exactly the same techniques used in lossy compression"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30aa1078-7e0d-44c5-8f0d-99f43c450981",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Learning from conventionally encoded data\n",
    "\n",
    "* Entropy decoding step is unavoidable\n",
    "* Quantization is typically course and non-uniform (1-4 bits)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a3b6296-15c4-49c9-a70b-01362df4bdfd",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/lossy_lossless.png\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5415e03e-48e4-41da-b49d-89bc78f7f7f6",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/lossy_lossless.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6907b2a7-49d9-4ec7-9f15-31a059ca1259",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Neural lossy compression\n",
    "\n",
    "* Google: Soundstream/Lyra (2021) \n",
    "  * [API available for web applications and android](https://github.com/google/lyra)\n",
    "  * Currently used in Google meet for low bitrate connections\n",
    "* Meta: Encodec (2022)\n",
    "  * [Pytorch API available](https://github.com/facebookresearch/encodec)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72c6e009-0556-40ab-b0e7-10935824d179",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/encodec_architecture.png\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa1f7b0a-0d2d-4d28-9c2f-e27a73ee1c54",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/encodec_architecture.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2feaa4de-ce6c-4814-9669-4fae7cecdee0",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Neural image/video compression\n",
    "\n",
    "* Many patents have been filed. Expect standardized versions very soon!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44a425e8-2490-47f5-ad84-4e29e58b111c",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/JPEG_vs_SD.svg\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba5bd7c8-e91d-4db0-95de-78752da53a8a",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/JPEG_vs_SD.svg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af0213ee-2d91-4ace-bb45-d7a036037823",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Neural representation learning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c41dcaf-aa1c-41e0-9ae4-36007f6b98e1",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/vae.svg\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "effc9f8e-adfa-43eb-90ab-79945709ef3e",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/vae.svg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0171ee4-7d72-44fa-9efe-76c6acf36e4c",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Initial results\n",
    " \n",
    "|    Model    |        Input Size       | Accuracy | Parameters | Training Time | Training FLOPS |\n",
    "|:-----------:|:-----------------------:|:--------:|:----------:|:-------------:|:--------------:|\n",
    "| MobileNetV2 | $$224\\times224\\times3$$ |    58%   |    2.23M   |  32 sec/epoch |      6.1 T     |\n",
    "|   Resample  |  $$64\\times64\\times3$$  |    39%   |    250K    |  14 sec/epoch |     0.915 B    |\n",
    "|     VAE     |  $$64\\times64\\times4$$  |    44%   |    251K    |  15 sec/epoch |     0.976 B    |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8291d55e-55a4-48ca-bc6c-d815620023da",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Linear decoding of latents"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72f2b04f-5a64-4df6-803d-5e77edb40551",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/linear_decode1.svg\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf0bd44d-7881-402c-adf4-f9af7e9517fc",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/linear_decode1.svg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d13a90d0-ca52-4565-9a87-52a2d127ce8e",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Linear decoding of latents"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1949a362-c277-408a-9f55-4697a9a8c0b0",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "source": [
    "<p style=\"text-align:center;\">\n",
    "<img src=\"_images/linear_decode2.svg\" width=700 height=700 class=\"center\">\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18796820-c741-44f4-8bf8-f49b5bfb77ab",
   "metadata": {
    "tags": [
     "remove-nb-cell"
    ]
   },
   "source": [
    "![](img/linear_decode2.svg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1a6b8ec-3987-4514-a677-a266ee3548d3",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Next steps\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5402cfd-fddf-4446-9cc3-da1de20e7eb5",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* Explore changes in network architecture"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75fdeef8-ea7b-4937-955b-8491f2088205",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* Explore models that can operate on quantized data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcbe7d35-2e8a-496f-bfeb-0842d1521865",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* Study the effect on data efficiency"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04ad66a5-930f-4070-a512-7541e58d2368",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "* Explore efficient pipelines for augmentation"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia 1.7.0-beta3",
   "language": "julia",
   "name": "julia-1.7"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
